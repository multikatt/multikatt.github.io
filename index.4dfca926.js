class t{constructor(t,o,s){this.pos=t,this.color=o,this.border_block=!1,this.size=20,this.margin=2,s&&(this.border_block=s)}}class o{constructor(t=[]){this.occupied_blocks=t}add_to_occupied_blocks(t){t.blocks.forEach((t=>{this.occupied_blocks.push(t)}))}}let s={nonI:{0:{1:[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],3:[[0,0],[1,0],[1,-1],[0,2],[1,2]]},1:{0:[[0,0],[1,0],[1,1],[0,-2],[1,-2]],2:[[0,0],[1,0],[1,1],[0,-2],[1,-2]]},2:{1:[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],3:[[0,0],[1,0],[1,-1],[0,2],[1,2]]},3:{2:[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]],0:[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]]}},I:{0:{1:[[0,0],[-2,0],[1,0],[-2,-1],[1,-2]],3:[[0,0],[-1,0],[2,0],[-1,-2],[2,1]]},1:{0:[[0,0],[2,0],[-1,0],[2,-1],[-1,2]],2:[[0,0],[-1,0],[2,0],[-1,2],[2,1]]},2:{1:[[0,0],[1,0],[-2,0],[1,2],[-2,-1]],3:[[0,0],[2,0],[-1,0],[2,-1],[-1,2]]},3:{2:[[0,0],[-2,0],[1,0],[-2,1],[1,-2]],0:[[0,0],[1,0],[-2,0],[1,2],[-2,-1]]}}},e={I:{shape:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],color:"#0DDCE5"},J:{shape:[[1,0,0,0],[1,1,1,0],[0,0,0,0]],color:"#1F77F7"},L:{shape:[[0,0,1,0],[1,1,1,0],[0,0,0,0]],color:"#E9800F"},O:{shape:[[1,1],[1,1]],color:"#F9EC23"},S:{shape:[[0,1,1,0],[1,1,0,0],[0,0,0,0]],color:"#01D705"},T:{shape:[[0,1,0,0],[1,1,1,0],[0,0,0,0]],color:"#FC59FE"},Z:{shape:[[1,1,0,0],[0,1,1,0],[0,0,0,0]],color:"#E83B40"}};class i{get_random_tetro(){let t=["I","J","L","O","S","T","Z"];return t[Math.floor(Math.random()*t.length)]}constructor(t){this.rotation_state=0,this.pos_x=4,this.pos_y=1,t||(t=this.get_random_tetro()),this.shape=e[t].shape,this.color=e[t].color,this.type=t}update_tetromino(){this.blocks=[],this.shape.forEach(((o,s)=>{o.forEach(((o,e)=>{1===o&&this.blocks.push(new t({x:this.pos_x+e,y:this.pos_y+s},this.color))}))}))}move(t){"left"==t&&(this.pos_x-=1),"right"==t&&(this.pos_x+=1),"down"==t&&(this.pos_y+=1),this.update_tetromino()}rotate(t="right",o){let e,i;"left"==t&&(e=(this.rotation_state+3)%4,i=this.shape.map(((t,o,s)=>s.map((t=>t[o])))).reverse()),"right"==t&&(e=(this.rotation_state+1)%4,i=this.shape.reverse().map(((t,o,s)=>s.map((t=>t[o])))));let r=((t,e)=>{let i,r=null;return i="I"==this.type?"I":"nonI",s[i][this.rotation_state][t].some((t=>{let s=!1;if(e.forEach(((e,i)=>{e.forEach(((e,r)=>{if(1===e){let e={x:r+this.pos_x,y:i+this.pos_y};null!=o.find((o=>o.pos.x==e.x+t[0]&&o.pos.y==e.y+t[1]))&&(s=!0)}}))})),0==s)return r=t,!0})),r||!1})(e,i);0!=r&&(this.pos_x+=r[0],this.pos_y+=r[1],this.shape=i,this.rotation_state=e),this.update_tetromino()}}(new class{constructor(){this.speed=250,this.size={w:12,h:22},this.game_state="running",this.update=t=>{if(t-this.prev_time>this.speed){if(this.prev_time=t,this.check_collision("down"))this.board.active_tetromino.move("down");else if(1===this.board.active_tetromino.pos_y)this.game_state="stopped";else{this.contains_full_rows()||this.board.add_to_occupied_blocks(this.board.active_tetromino);const t=new i;t.update_tetromino(),this.board.active_tetromino=t}this.draw_game()}"running"===this.game_state&&window.requestAnimationFrame(this.update)},this.canvas=document.getElementById("Game"),this.ctx=this.canvas.getContext("2d"),this.prev_time=0,this.board=new o,this.create_border(this.size.w,this.size.h)}start(){window.requestAnimationFrame(this.update);const t=new i;t.update_tetromino(),this.board.active_tetromino=t,this.draw_game(),this.input()}create_border(o,s){for(let e=0;e<o;e++)for(let i=0;i<s;i++)0!=i&&i!=s-1&&0!=e&&e!=o-1||this.board.occupied_blocks.push(new t({x:e,y:i},"grey",!0))}contains_full_rows(){let t=[];return this.board.active_tetromino.blocks.filter(((t,o,s)=>s.map((t=>t.pos.y)).indexOf(t.pos.y)==o)).forEach((o=>{let s=this.board.active_tetromino.blocks.filter((t=>t.pos.y===o.pos.y)),e=this.board.occupied_blocks.filter((t=>t.pos.y==o.pos.y));s.length+e.length==this.size.w&&t.push(o.pos.y)})),t.length>0&&(this.board.add_to_occupied_blocks(this.board.active_tetromino),t.forEach((t=>{this.board.occupied_blocks=this.board.occupied_blocks.filter((o=>o.pos.y!=t||1==o.border_block)),this.board.occupied_blocks.filter((o=>o.pos.y<t&&0==o.border_block)).forEach((t=>{t.pos.y+=1}))})),!0)}check_collision(t){let o=this.board.active_tetromino,s=!0,e=t=>(this.board.occupied_blocks.forEach((o=>{o.pos.x==t.x&&o.pos.y==t.y+1&&(s=!1)})),s),i=(t,o)=>(this.board.occupied_blocks.forEach((e=>{"left"==o?e.pos.y==t.y&&e.pos.x==t.x-1&&(s=!1):"right"==o&&e.pos.y==t.y&&e.pos.x==t.x+1&&(s=!1)})),s);return o.shape.forEach(((r,a)=>{r.forEach(((r,h)=>{if(1===r){let r={x:h+o.pos_x,y:a+o.pos_y};("left"!=t||i(r,"left"))&&("right"!=t||i(r,"right"))&&("down"!=t||e(r))||(s=!1)}}))})),s}draw_game(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.draw_tetrominos()}draw_tetrominos(){this.board.active_tetromino.blocks.forEach((t=>this.draw_block(t))),this.board.occupied_blocks.forEach((t=>this.draw_block(t)))}draw_block(t){this.ctx.fillStyle=t.color,this.ctx.fillRect(t.pos.x*(t.size+t.margin),t.pos.y*(t.size+t.margin),t.size,t.size)}input(){window.addEventListener("keyup",(t=>{if("running"==this.game_state)switch(t.code){case"ArrowLeft":this.check_collision("left")&&this.board.active_tetromino.move("left"),this.draw_game();break;case"ArrowRight":this.check_collision("right")&&this.board.active_tetromino.move("right"),this.draw_game();break;case"Space":case"ArrowUp":case"KeyX":this.board.active_tetromino.rotate("right",this.board.occupied_blocks),this.draw_game();break;case"KeyZ":this.board.active_tetromino.rotate("left",this.board.occupied_blocks),this.draw_game();break;case"ArrowDown":for(;this.check_collision("down");)this.board.active_tetromino.move("down");this.draw_game()}}))}}).start();
//# sourceMappingURL=index.4dfca926.js.map
