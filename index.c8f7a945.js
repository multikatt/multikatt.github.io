class t{constructor(t,o,e){this.pos=t,this.color=o,this.border_block=!1,this.size=20,this.margin=2,e&&(this.border_block=e)}}class o{constructor(t=[]){this.occupied_blocks=t}add_to_occupied_blocks(t){t.blocks.forEach((t=>{this.occupied_blocks.push(t)}))}}const e={nonI:{0:{1:[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],3:[[0,0],[1,0],[1,-1],[0,2],[1,2]]},1:{0:[[0,0],[1,0],[1,1],[0,-2],[1,-2]],2:[[0,0],[1,0],[1,1],[0,-2],[1,-2]]},2:{1:[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],3:[[0,0],[1,0],[1,-1],[0,2],[1,2]]},3:{2:[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]],0:[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]]}},I:{0:{1:[[0,0],[-2,0],[1,0],[-2,-1],[1,-2]],3:[[0,0],[-1,0],[2,0],[-1,-2],[2,1]]},1:{0:[[0,0],[2,0],[-1,0],[2,-1],[-1,2]],2:[[0,0],[-1,0],[2,0],[-1,2],[2,1]]},2:{1:[[0,0],[1,0],[-2,0],[1,2],[-2,-1]],3:[[0,0],[2,0],[-1,0],[2,-1],[-1,2]]},3:{2:[[0,0],[-2,0],[1,0],[-2,1],[1,-2]],0:[[0,0],[1,0],[-2,0],[1,2],[-2,-1]]}}},s={I:{shape:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],color:"#0DDCE5"},J:{shape:[[1,0,0,0],[1,1,1,0],[0,0,0,0]],color:"#1F77F7"},L:{shape:[[0,0,1,0],[1,1,1,0],[0,0,0,0]],color:"#E9800F"},O:{shape:[[1,1],[1,1]],color:"#F9EC23"},S:{shape:[[0,1,1,0],[1,1,0,0],[0,0,0,0]],color:"#01D705"},T:{shape:[[0,1,0,0],[1,1,1,0],[0,0,0,0]],color:"#FC59FE"},Z:{shape:[[1,1,0,0],[0,1,1,0],[0,0,0,0]],color:"#E83B40"}};class i{get_random_tetro(){let t=["I","J","L","O","S","T","Z"];return t[Math.floor(Math.random()*t.length)]}constructor(t){this.rotation_state=0,this.pos_x=4,this.pos_y=1,t||(t=this.get_random_tetro()),this.blocks=[],this.shape=[...s[t].shape],this.color=s[t].color,this.type=t}update_tetromino(){this.blocks=[],this.shape.forEach(((o,e)=>{o.forEach(((o,s)=>{1===o&&this.blocks.push(new t({x:this.pos_x+s,y:this.pos_y+e},this.color))}))}))}move(t){"left"==t&&(this.pos_x-=1),"right"==t&&(this.pos_x+=1),"down"==t&&(this.pos_y+=1),this.update_tetromino()}rotate(t="right",o){let s,i;"left"==t?(s=(this.rotation_state+3)%4,i=this.shape.map(((t,o,e)=>e.map((t=>t[o])))).reverse()):(s=(this.rotation_state+1)%4,i=this.shape.reverse().map(((t,o,e)=>e.map((t=>t[o])))));let r=((t,s)=>{let i,r=!1;return i="I"==this.type?"I":"nonI",e[i][this.rotation_state][t].some((t=>{let e=!1;if(s.forEach(((s,i)=>{s.forEach(((s,r)=>{if(1===s){let s={x:r+this.pos_x,y:i+this.pos_y};o&&null!=o.find((o=>o.pos.x==s.x+t[0]&&o.pos.y==s.y+t[1]))&&(e=!0)}}))})),0==e)return r=t,!0})),r||!1})(s,i);0!=r&&Array.isArray(r)&&(this.pos_x+=r[0],this.pos_y+=r[1],this.shape=i,this.rotation_state=s),this.update_tetromino()}}(new class{constructor(){this.prev_time=0,this.score=0,this.level=0,this.total_rows_cleared=0,this.size={w:12,h:22},this.game_state="running",this.update=t=>{t-this.prev_time>this.speed&&(this.prev_time=t,this.check_collision("down")?this.board.active_tetromino.move("down"):1===this.board.active_tetromino.pos_y?this.game_state="stopped":(this.contains_full_rows()||this.board.add_to_occupied_blocks(this.board.active_tetromino),this.spawn_tetromino()),this.level=Math.floor(this.total_rows_cleared/10),this.set_speed(),this.draw_game()),"running"===this.game_state&&window.requestAnimationFrame(this.update)},this.set_speed(),this.canvas=document.getElementById("Game"),this.ctx=this.canvas.getContext("2d"),this.board=new o,this.create_border(this.size.w,this.size.h)}start(){window.requestAnimationFrame(this.update),this.spawn_tetromino(),this.draw_game(),this.input()}spawn_tetromino(){this.board.active_tetromino=void 0===this.board.next_tetromino?new i:this.board.next_tetromino,this.board.next_tetromino=new i,"O"==this.board.next_tetromino.type?this.board.next_tetromino.pos_x=15:"I"==this.board.next_tetromino.type?this.board.next_tetromino.pos_x=14:this.board.next_tetromino.pos_x=14.5,this.board.next_tetromino.update_tetromino(),this.board.active_tetromino.pos_x=4,this.board.active_tetromino.update_tetromino()}set_speed(){this.speed=1e3*Math.pow(.8-.007*this.level,this.level)}create_border(o,e){for(let s=0;s<o;s++)for(let i=0;i<e;i++)0!=i&&i!=e-1&&0!=s&&s!=o-1||this.board.occupied_blocks.push(new t({x:s,y:i},"grey",!0))}contains_full_rows(){let t=[];if(this.board.active_tetromino.blocks.filter(((t,o,e)=>e.map((t=>t.pos.y)).indexOf(t.pos.y)==o)).forEach((o=>{let e=this.board.active_tetromino.blocks.filter((t=>t.pos.y===o.pos.y)),s=this.board.occupied_blocks.filter((t=>t.pos.y==o.pos.y));e.length+s.length==this.size.w&&t.push(o.pos.y)})),t.length>0){this.board.add_to_occupied_blocks(this.board.active_tetromino),t.forEach((t=>{this.board.occupied_blocks=this.board.occupied_blocks.filter((o=>o.pos.y!=t||1==o.border_block)),this.board.occupied_blocks.filter((o=>o.pos.y<t&&0==o.border_block)).forEach((t=>{t.pos.y+=1}))}));let o=[40,100,300,1200];return this.score+=o[t.length-1]*(this.level+1),this.total_rows_cleared+=t.length,!0}return!1}check_collision(t){let o=this.board.active_tetromino,e=!0,s=t=>(this.board.occupied_blocks.forEach((o=>{o.pos.x==t.x&&o.pos.y==t.y+1&&(e=!1)})),e),i=(t,o)=>(this.board.occupied_blocks.forEach((s=>{"left"==o?s.pos.y==t.y&&s.pos.x==t.x-1&&(e=!1):"right"==o&&s.pos.y==t.y&&s.pos.x==t.x+1&&(e=!1)})),e);return o.shape.forEach(((r,a)=>{r.forEach(((r,h)=>{if(1===r){let r={x:h+o.pos_x,y:a+o.pos_y};("left"!=t||i(r,"left"))&&("right"!=t||i(r,"right"))&&("down"!=t||s(r))||(e=!1)}}))})),e}draw_game(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.draw_tetrominos(),document.getElementById("Score").innerHTML=this.score.toString(),document.getElementById("Level").innerHTML=this.level.toString()}draw_tetrominos(){this.board.active_tetromino.blocks.forEach((t=>this.draw_block(t))),this.board.occupied_blocks.forEach((t=>this.draw_block(t))),this.board.next_tetromino.blocks.forEach((t=>this.draw_block(t)))}draw_block(t){this.ctx.fillStyle=t.color,this.ctx.fillRect(t.pos.x*(t.size+t.margin),t.pos.y*(t.size+t.margin),t.size,t.size)}input(){window.addEventListener("keyup",(t=>{if("running"==this.game_state)switch(t.code){case"ArrowLeft":this.check_collision("left")&&this.board.active_tetromino.move("left"),this.draw_game();break;case"ArrowRight":this.check_collision("right")&&this.board.active_tetromino.move("right"),this.draw_game();break;case"Space":case"ArrowUp":case"KeyX":this.board.active_tetromino.rotate("right",this.board.occupied_blocks),this.draw_game();break;case"KeyZ":this.board.active_tetromino.rotate("left",this.board.occupied_blocks),this.draw_game();break;case"ArrowDown":for(;this.check_collision("down");)this.board.active_tetromino.move("down");this.draw_game()}}))}}).start();
//# sourceMappingURL=index.c8f7a945.js.map
