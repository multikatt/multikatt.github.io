{"mappings":"MAAMA,gBAANC,KAMEC,MAAQ,IANVD,KAwBEE,OAAUC,IACRH,KAAKI,IAAIC,UAAU,EAAG,EAAGL,KAAKM,OAAOC,MAAOP,KAAKM,OAAOE,QACxDR,KAAKS,aACDN,EAAYH,KAAKU,KAAKC,KAAOX,KAAKC,OAASD,KAAKY,iBAAiBC,MAAQ,KACzEb,KAAKY,iBAAiBC,OAAS,EAC/Bb,KAAKY,iBAAiBE,kBACtBd,KAAKU,KAAKC,KAAOR,GAErBH,KAAKY,iBAAiBG,OACtBC,OAAOC,sBAAsBjB,KAAKE,SAxBlCF,KAAKM,OAASY,SAASC,eAAe,QACtCnB,KAAKI,IAAMJ,KAAKM,OAAOc,WAAW,MAClCpB,KAAKU,KAAO,CAAEW,MAAO,EAAGV,KAAM,GAGhCU,QACErB,KAAKS,aACLO,OAAOC,sBAAsBjB,KAAKE,QAClC,MAAMoB,EAAQ,IAAIC,EAClBD,EAAMR,kBACNd,KAAKY,iBAAmBU,EACxBA,EAAMP,OACNf,KAAKwB,QAgBPf,WAAWF,EAAQ,GAAIC,EAAS,IAC9B,MAAMiB,EAAyB,GAC/B,IAAK,IAAIC,EAAK,EAAGA,EAAKnB,EAAOmB,IAC3B,IAAK,IAAIC,EAAK,EAAGA,EAAKnB,EAAQmB,IAClB,GAANA,GAAWA,GAAMnB,EAAS,GAAW,GAANkB,GAAWA,GAAMnB,EAAQ,GAC1DkB,EAAcG,KAAK,IAAIC,EAAMH,EAAIC,EAAI,SAI3CF,EAAcK,SAASC,GAAMA,EAAEhB,SAGjCS,QACER,OAAOgB,iBAAiB,SAAUC,IAChC,OAAQA,EAAIC,MACV,IAAK,YACClC,KAAKY,iBAAiBuB,MAAQ,IAChCnC,KAAKY,iBAAiBuB,OAAS,EAC/BnC,KAAKY,iBAAiBE,mBAExB,MACF,IAAK,aACCd,KAAKY,iBAAiBuB,MAAQ,IAChCnC,KAAKY,iBAAiBuB,OAAS,EAC/BnC,KAAKY,iBAAiBE,mBAExB,MACF,IAAK,QACL,IAAK,YACHsB,QAAQC,IAAI,mBAUhBR,UAAc9B,cAICoC,EAAsBtB,EAAsByB,GAC7DC,aADiBJ,MAAAA,OAAsBtB,MAAAA,OAAsByB,MAAAA,EAJjEtC,KACEwC,KAAO,GADTxC,KAEEyC,OAAS,EAMT1B,OACEf,KAAKI,IAAIsC,UAAY1C,KAAKsC,MAC1BtC,KAAKI,IAAIuC,SACP3C,KAAKmC,OAASnC,KAAKwC,KAAOxC,KAAKyC,QAC/BzC,KAAKa,OAASb,KAAKwC,KAAOxC,KAAKyC,QAC/BzC,KAAKwC,KACLxC,KAAKwC,aAKLjB,EASJT,kBACEd,KAAK4C,SAASC,OAAS,GACvB7C,KAAK4C,SAASE,MAAMhB,SAAO,CAAEiB,EAAGC,KAC9BhD,KAAK4C,SAASC,OAAOjB,KAAK,IAAIC,EAAM7B,KAAKmC,MAAQa,EAAGhD,KAAKa,MAAO,YAIpEE,OACEf,KAAK4C,SAASC,OAAOf,SAASmB,IAC5BA,EAAMlC,wBAlBZf,KACE4C,SAII,CAAEE,MAAO,CAAC,EAAG,EAAG,EAAG,GAAIR,MAAO,OAAQO,OAAQ,IALpD7C,KAMEmC,MAAQ,EANVnC,KAOEa,MAAQ,IAgBG,IAAId,GACZsB","sources":["src/App.ts"],"sourcesContent":["class Game {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  time: { start: DOMHighResTimeStamp; prev: DOMHighResTimeStamp };\n  active_tetromino: Tetromino;\n  tetrominos: Tetromino[];\n  speed = 250;\n\n  constructor() {\n    this.canvas = document.getElementById(\"Game\") as HTMLCanvasElement;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.time = { start: 0, prev: 0 };\n  }\n\n  start() {\n    this.drawBorder();\n    window.requestAnimationFrame(this.update);\n    const tetro = new Tetromino();\n    tetro.build_tetromino();\n    this.active_tetromino = tetro;\n    tetro.draw();\n    this.input();\n  }\n\n  update = (timestamp: DOMHighResTimeStamp) => {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawBorder();\n    if (timestamp - this.time.prev > this.speed && this.active_tetromino.pos_y < 20) {\n        this.active_tetromino.pos_y += 1;\n        this.active_tetromino.build_tetromino();\n        this.time.prev = timestamp;\n        }\n    this.active_tetromino.draw();\n    window.requestAnimationFrame(this.update);\n\n  };\n\n  drawBorder(width = 12, height = 22) {\n    const border_blocks: Block[] = [];\n    for (let ix = 0; ix < width; ix++) {\n      for (let iy = 0; iy < height; iy++) {\n        if (iy == 0 || iy == height - 1 || ix == 0 || ix == width - 1) {\n          border_blocks.push(new Block(ix, iy, \"grey\"));\n        }\n      }\n    }\n    border_blocks.forEach((b) => b.draw());\n  }\n\n  input() {\n    window.addEventListener(\"keyup\", (key) => {\n      switch (key.code) {\n        case \"ArrowLeft\":\n          if (this.active_tetromino.pos_x > 1) {\n            this.active_tetromino.pos_x -= 1\n            this.active_tetromino.build_tetromino();\n          }\n          break;\n        case \"ArrowRight\":\n          if (this.active_tetromino.pos_x < 7) {\n            this.active_tetromino.pos_x += 1\n            this.active_tetromino.build_tetromino();\n          }\n          break;\n        case \"Space\":\n        case \"ArrowDown\":\n          console.log(\"down\");\n          break;\n        default:\n          break;\n      }\n\n    })\n  }\n}\n\nclass Block extends Game {\n  size = 20;\n  margin = 2;\n\n  constructor(public pos_x: number, public pos_y: number, public color: string) {\n    super();\n  }\n\n  draw() {\n    this.ctx.fillStyle = this.color;\n    this.ctx.fillRect(\n      this.pos_x * (this.size + this.margin),\n      this.pos_y * (this.size + this.margin),\n      this.size,\n      this.size\n    );\n  }\n}\n\nclass Tetromino {\n  straight: {\n    shape: number[];\n    color: string;\n    blocks: Block[];\n  } = { shape: [1, 1, 1, 1], color: \"blue\", blocks: [] };\n  pos_x = 4;\n  pos_y = 1;\n\n  build_tetromino() {\n    this.straight.blocks = [];\n    this.straight.shape.forEach((_, i) => {\n      this.straight.blocks.push(new Block(this.pos_x + i, this.pos_y, \"blue\"));\n    });\n  }\n\n  draw() {\n    this.straight.blocks.forEach((block) => {\n      block.draw();\n    });\n  }\n}\n\nconst game = new Game();\ngame.start();\n"],"names":["$12d14a4dd0e53ebe$var$Game","this","speed","update","timestamp","ctx","clearRect","canvas","width","height","drawBorder","time","prev","active_tetromino","pos_y","build_tetromino","draw","window","requestAnimationFrame","document","getElementById","getContext","start","tetro","$12d14a4dd0e53ebe$var$Tetromino","input","border_blocks","ix","iy","push","$12d14a4dd0e53ebe$var$Block","forEach","b","addEventListener","key","code","pos_x","console","log","color","super","size","margin","fillStyle","fillRect","straight","blocks","shape","_","i","block"],"version":3,"file":"index.ed5ffefc.js.map"}